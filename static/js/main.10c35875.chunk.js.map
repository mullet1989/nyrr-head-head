{"version":3,"sources":["useDebounce.js","components/search.js","components/participant.js","App.js","serviceWorker.js","index.js"],"names":["useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","AthleteSelect","onClick","onFocusIn","onFocusOut","isOpen","results","setResults","athleteName","setAthleteName","debouncedSearchTerm","optionsAsync","query","a","fetch","JSON","stringify","json","r","response","items","style","border","borderRadius","position","background","zIndex","type","marginBottom","fontSize","onFocus","onBlur","onChange","e","target","width","marginTop","map","i","className","key","onMouseDown","x","firstName","lastName","runnerId","racesCount","Participant","setParticipantRaces","setRaces","setIsOpen","nameClickHandler","athleteId","rs","App","p1Races","setp1Races","p2Races","setp2Races","bothRaced","setBothRaced","p1","p2","length","commonRaces","p2RaceCodes","eventCode","race","idx","indexOf","textAlign","padding","borderLeft","backgroundColor","winsA1","winsA2","Object","entries","k","v","console","log","actualTime","keys","display","alignItems","headToHead","fontWeight","color","eventName","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.10c35875.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value],\n  );\n\n  return debouncedValue;\n};\n\nexport default useDebounce;","import React, { useEffect, useState } from \"react\";\nimport useDebounce from \"../useDebounce\";\n\nconst AthleteSelect = ({ onClick, onFocusIn, onFocusOut, isOpen }) => {\n\n  let [results, setResults] = useState([]);\n  let [athleteName, setAthleteName] = useState(\"\");\n\n  const debouncedSearchTerm = useDebounce(athleteName, 300);\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      optionsAsync(debouncedSearchTerm);\n    }\n  }, [debouncedSearchTerm]);\n\n  const optionsAsync = async query => {\n    const results = await fetch(\"https://results.nyrr.org/api/runners/search\", {\n      \"headers\": {\n        \"accept\": \"application/json, text/plain, */*\",\n        \"accept-language\": \"en-US,en;q=0.9\",\n        \"content-type\": \"application/json;charset=UTF-8\",\n        \"sec-fetch-mode\": \"cors\",\n        \"sec-fetch-site\": \"same-origin\",\n        \"token\": \"6112c32703f442f0\",\n      },\n      \"referrer\": \"https://results.nyrr.org/home\",\n      \"referrerPolicy\": \"no-referrer-when-downgrade\",\n      \"body\": JSON.stringify({\n        \"searchString\": query,\n        \"pageIndex\": 1,\n        \"pageSize\": 5,\n        \"sortColumn\": null,\n        \"sortDescending\": false,\n      }),\n      \"method\": \"POST\",\n      \"mode\": \"cors\",\n    });\n\n    const r = await results.json();\n    setResults(r.response.items);\n  };\n\n\n  return (\n    <div style={{ border: \"solid 1px\", borderRadius: \"5px\", position: \"relative\", background: \"white\", zIndex: \"100\" }}>\n      <input type=\"text\"\n             value={athleteName}\n             style={{ marginBottom: \"0\", fontSize: \"1.2em\", border: \"none\" }}\n             onFocus={onFocusIn}\n             onBlur={onFocusOut}\n             onChange={e => setAthleteName(e.target.value)}\n      />\n      <div style={{ position: \"absolute\", width: \"100%\", background: \"white\", marginTop: \"5px\" }}>\n        {isOpen && results.map((r, i) =>\n          <div className=\"box\"\n               key={i}\n               onMouseDown={x => {\n                 setAthleteName(`${r.firstName} ${r.lastName}`);\n                 onClick(r.runnerId);\n               }}>\n            {r.firstName} {r.lastName} - ({r.racesCount} races)\n          </div>)}\n      </div>\n    </div>);\n\n\n};\n\nexport default AthleteSelect;\n","import React, { useState } from \"react\";\nimport AthleteSearch from \"./search\";\nimport Grid from \"./results-grid\";\n\nconst Participant = ({ setParticipantRaces }) => {\n\n  let [races, setRaces] = useState([]);\n  let [isOpen, setIsOpen] = useState(true);\n\n  const nameClickHandler = async athleteId => {\n    setIsOpen(false);\n    const response = await fetch(\"https://results.nyrr.org/api/runners/races\", {\n      \"headers\": {\n        \"accept\": \"application/json, text/plain, */*\",\n        \"accept-language\": \"en-GB,en-US;q=0.9,en;q=0.8\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"application/json;charset=UTF-8\",\n        \"pragma\": \"no-cache\",\n        \"sec-fetch-dest\": \"empty\",\n        \"sec-fetch-mode\": \"cors\",\n        \"sec-fetch-site\": \"same-origin\",\n        \"token\": \"6112c32703f442f0\",\n      },\n      \"referrer\": \"https://results.nyrr.org/home\",\n      \"referrerPolicy\": \"no-referrer-when-downgrade\",\n      \"body\": JSON.stringify({\n        \"runnerId\": athleteId,\n        \"searchString\": null,\n        \"year\": null,\n        \"distance\": null,\n        \"pageIndex\": 1,\n        \"pageSize\": 100,\n        \"sortColumn\": \"EventDate\",\n        \"sortDescending\": true,\n      }),\n      \"method\": \"POST\",\n      \"mode\": \"cors\",\n    });\n    const rs = await response.json();\n    setRaces(rs.response.items);\n    setParticipantRaces(rs.response.items);\n\n\n  };\n\n  return (\n    <>\n      <AthleteSearch\n        onFocusOut={e => setIsOpen(false)}\n        onFocusIn={e => setIsOpen(true)}\n        onClick={nameClickHandler}\n        isOpen={isOpen}\n      />\n\n\n      {/*<Grid races={races}/>*/}\n    </>);\n};\n\nexport default Participant;","import React, { useEffect, useState } from \"react\";\nimport \"milligram\";\nimport \"./App.css\";\nimport Participant from \"./components/participant\";\n\nfunction App() {\n\n  let [p1Races, setp1Races] = useState([]);\n  let [p2Races, setp2Races] = useState([]);\n\n  let [bothRaced, setBothRaced] = useState({});\n\n  const setRaces = (p1, p2) => {\n    p1 && setp1Races(p1);\n    p2 && setp2Races(p2);\n  };\n\n  useEffect(() => {\n\n    if (p1Races.length && p2Races.length) {\n      const commonRaces = {};\n      const p2RaceCodes = p2Races.map(x => x.eventCode);\n      for (let race of p1Races) {\n        const idx = p2RaceCodes.indexOf(race.eventCode);\n        if (idx > -1) {\n          commonRaces[race.eventCode] = [race, p2Races[idx]];\n        }\n      }\n      setBothRaced({ ...commonRaces });\n    }\n\n  }, [p1Races, p2Races]);\n\n  const headToHead = () => {\n    let winsA1 = 0;\n    let winsA2 = 0;\n\n    for (let [k, v] of Object.entries(bothRaced)) {\n      console.log(v);\n      if (bothRaced[k][0].actualTime < bothRaced[k][1].actualTime) {\n        winsA1++;\n      } else if (bothRaced[k][0].actualTime > bothRaced[k][1].actualTime) {\n        winsA2++;\n      }\n    }\n\n    if (Object.keys(bothRaced).length) {\n      return (\n        <div className=\"row\" style={{ display: \"flex\", alignItems: \"center\", padding: \"2rem 0\" }}>\n          <div className=\"column\">\n            <span>\n              {winsA1 > winsA2 && <span>👑</span>}\n              ({winsA1})\n            </span>\n          </div>\n          <div className=\"column\">\n            {/*<input type=\"button\" value=\"share this result\" onClick={share}/>*/}\n          </div>\n          <div className=\"column\">\n            <span>\n              {winsA2 > winsA1 && <span>👑</span>}\n              ({winsA2})\n            </span>\n          </div>\n        </div>\n      );\n    }\n    return \"\";\n  };\n\n  return (\n    <div className=\"container\">\n\n      <div className=\"row\">\n        <div className=\"column\" style={{ marginTop: \"10px\" }}>\n          <h1 style={{ textAlign: \"center\" }}>NYRR HEAD TO HEAD</h1>\n          <div style={{ padding: \"10px\", borderLeft: \".3rem solid #9b4dca\", backgroundColor: \"#f4f5f6\" }}>\n            <span>search two athletes to compare their results in nyrr history</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row col\">\n        <div className=\"column\">\n          <h4 style={{ textAlign: \"left\", marginTop: \"2rem\" }}>RED CORNER <span>🥊</span></h4>\n          <Participant setParticipantRaces={x => setRaces(x, null)}/>\n        </div>\n\n        <div className=\"column\">\n          <h4 style={{ textAlign: \"right\", marginTop: \"2rem\" }}>BLUE CORNER</h4>\n          <Participant setParticipantRaces={x => setRaces(null, x)}/>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"column\" style={{ textAlign: \"center\" }}>\n          {headToHead()}\n          {bothRaced && Object.keys(bothRaced).length ? Object.entries(bothRaced).map(([k, v]) => {\n              return (\n                <div className=\"row flex flex-middle\" style={{ marginTop: \"10px\", marginBottom: \"10px\" }} key={k}>\n                  <div\n                    style={{\n                      backgroundColor: bothRaced[k][0].actualTime < bothRaced[k][1].actualTime ? \"darkseagreen\" : \"lightcoral\",\n                      fontWeight: \"bold\",\n                      borderRadius: \"25px\",\n                      color: \"black\",\n                    }}\n                    className=\"column\">{bothRaced[k][0].actualTime}</div>\n                  <div className=\"column\">{bothRaced[k][0].eventName}</div>\n                  <div\n                    style={{\n                      backgroundColor: bothRaced[k][0].actualTime > bothRaced[k][1].actualTime ? \"darkseagreen\" : \"lightcoral\",\n                      fontWeight: \"bold\",\n                      borderRadius: \"25px\",\n                      color: \"black\",\n                    }}\n                    className=\"column\">{bothRaced[k][1].actualTime}</div>\n                </div>\n              );\n            })\n            : bothRaced && p1Races.length && p2Races.length ?\n              <div>sorry, no races in common 😥</div>\n              : <div/>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}